name: 'chocolatine'
run-name: ${{ github.actor }} checking if avaible to push
on:
  push:
    branches-ignore:
    - 'ga-ignore-'
  pull_request:
    branches-ignore:
    - 'ga-ignore-'

jobs:

  check_program_compilation:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker:latest
    steps:

      - name: use_checkout
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: compile_all_files
        run: make

      - name: clean_files
        run: make clean

      - name: run_files
        run: |
          for file in ${{ vars.EXECUTABLES }}; do
            if [ ! -x "$file" ]; then
              echo "File $file does not exist or is not executable"
              exit 1
            fi
          done

  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    needs: [check_program_compilation]
    steps:

      - name: use_checkout
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: run_coding-style.sh
        run: check.sh . /tmp/

      - name: annotations
        run: |
          logs="tmp/coding-style-reports.log"
          while IFS= read line;do
            fields=($(printf "%s" "$line"|cut -d':' --output-delimiter=' ' -f1-))
            echo "::error title=${fields[2]} coding style error,file=${fields[0]},line=${fields[1]}::${fields[3]}"
          done < "$logs"

  run_tests:
    needs: [check_coding_style]
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: use_checkout
        uses: actions/checkout@v3
        with:
          repository: ''
      
      - name: compile_project
        run: make test_run

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: [check_coding_style]
    if: github.event_name == 'push'
    steps:

      - name: use_checkout
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: push_to_miror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            git@github.com:MIRROR_URL
          ssh_private_key:
            ${{ secrets.SECRET_CHOCOLATINE }}